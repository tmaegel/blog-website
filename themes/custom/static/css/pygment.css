code {
  overflow: auto;
  /*
   * This uses `white-space: pre-wrap` to get elements within <pre> tags to wrap.
   * Python, for code chunks within three backticks (```), doesn't wordwrap code lines by default,
   * because they're within <pre> tags, which don't wrap by default.
   * See https://github.com/github/markup/issues/168 , which is specifically about this parsing issue,
   * even though that link's discussion is talking about GitHub.
   */
  white-space: pre-wrap; /* css-3 */
  white-space: -moz-pre-wrap; /* Mozilla, since 1999 */
  white-space: -pre-wrap; /* Opera 4-6 */
  white-space: -o-pre-wrap; /* Opera 7 */
  word-wrap: break-word; /* Internet Explorer 5.5+ */
}

td.linenos .normal {
  color: inherit;
  background-color: transparent;
}

span.linenos {
  color: inherit;
  background-color: transparent;
}

td.linenos .special {
  color: var(--black);
  background-color: #ffffc0;
}

span.linenos.special {
  color: var(--black);
  background-color: #ffffc0;
}

.highlight .hll {
  background-color: #ffffcc;
}

.highlight {
  color: var(--text);
  border-radius: 4px;
}

.highlight .c {
  color: var(--text);
} /* Comment */

.highlight .err {
  color: var(--text);
} /* Error */

.highlight .esc {
  color: var(--text);
} /* Escape */

.highlight .g {
  color: var(--text);
} /* Generic */

.highlight .k {
  color: var(--magenta);
} /* Keyword */

.highlight .l {
  color: var(--text);
} /* Literal */

.highlight .n {
  color: var(--red);
} /* Name */

.highlight .o {
  color: var(--cyan);
} /* Operator */

.highlight .x {
  color: var(--text);
} /* Other */

.highlight .p {
  color: var(--text);
} /* Punctuation */

.highlight .ch {
  color: var(--text);
} /* Comment.Hashbang */

.highlight .cm {
  color: var(--text);
} /* Comment.Multiline */

.highlight .cp {
  color: var(--text);
} /* Comment.Preproc */

.highlight .cpf {
  color: var(--text);
} /* Comment.PreprocFile */

.highlight .c1 {
  color: var(--text);
} /* Comment.Single */

.highlight .cs {
  color: var(--text);
} /* Comment.Special */

.highlight .gd {
  color: var(--text);
} /* Generic.Deleted */

.highlight .ge {
  color: var(--text);
} /* Generic.Emph */

.highlight .gr {
  color: var(--text);
} /* Generic.Error */

.highlight .gh {
  color: var(--text);
} /* Generic.Heading */

.highlight .gi {
  color: var(--text);
} /* Generic.Inserted */

.highlight .go {
  color: var(--text);
} /* Generic.Output */

.highlight .gp {
  color: var(--text);
} /* Generic.Prompt */

.highlight .gs {
  color: var(--text);
} /* Generic.Strong */

.highlight .gu {
  color: var(--text);
} /* Generic.Subheading */

.highlight .gt {
  color: var(--text);
} /* Generic.Traceback */

.highlight .kc {
  color: var(--yellow);
} /* Keyword.Constant */

.highlight .kd {
  color: var(--magenta);
} /* Keyword.Declaration */

.highlight .kn {
  color: var(--magenta);
} /* Keyword.Namespace */

.highlight .kp {
  color: var(--magenta);
} /* Keyword.Pseudo */

.highlight .kr {
  color: var(--magenta);
} /* Keyword.Reserved */

.highlight .kt {
  color: var(--yellow);
} /* Keyword.Type */

.highlight .ld {
  color: var(--text);
} /* Literal.Date */

.highlight .m {
  color: var(--yellow);
} /* Literal.Number */

.highlight .s {
  color: var(--green);
} /* Literal.String */

.highlight .na {
  color: var(--red);
} /* Name.Attribute */

.highlight .nb {
  color: var(--yellow);
} /* Name.Builtin */

.highlight .nc {
  color: var(--yellow);
} /* Name.Class */

.highlight .no {
  color: var(--red);
} /* Name.Constant */

.highlight .nd {
  color: var(--blue);
} /* Name.Decorator */

.highlight .ni {
  color: var(--red);
} /* Name.Entity */

.highlight .ne {
  color: var(--red);
} /* Name.Exception */

.highlight .nf {
  color: var(--blue);
  font-weight: bold;
} /* Name.Function */

.highlight .nl {
  color: var(--red);
} /* Name.Label */

.highlight .nn {
  color: var(--red);
} /* Name.Namespace */

.highlight .nx {
  color: var(--red);
} /* Name.Other */

.highlight .py {
  color: var(--red);
} /* Name.Property */

.highlight .nt {
  color: var(--red);
} /* Name.Tag */

.highlight .nv {
  color: var(--red);
} /* Name.Variable */

.highlight .ow {
  color: var(--cyan);
} /* Operator.Word */

.highlight .pm {
  color: var(--text);
} /* Punctuation.Marker */

.highlight .w {
  color: var(--text);
} /* Text.Whitespace */

.highlight .mb {
  color: var(--yellow);
} /* Literal.Number.Bin */

.highlight .mf {
  color: var(--yellow);
} /* Literal.Number.Float */

.highlight .mh {
  color: var(--yellow);
} /* Literal.Number.Hex */

.highlight .mi {
  color: var(--yellow);
} /* Literal.Number.Integer */

.highlight .mo {
  color: var(--yellow);
} /* Literal.Number.Oct */

.highlight .sa {
  color: var(--green);
} /* Literal.String.Affix */

.highlight .sb {
  color: var(--green);
} /* Literal.String.Backtick */

.highlight .sc {
  color: var(--green);
} /* Literal.String.Char */

.highlight .dl {
  color: var(--green);
} /* Literal.String.Delimiter */

.highlight .sd {
  color: var(--green);
} /* Literal.String.Doc */

.highlight .s2 {
  color: var(--green);
} /* Literal.String.Double */

.highlight .se {
  color: var(--green);
} /* Literal.String.Escape */

.highlight .sh {
  color: var(--green);
} /* Literal.String.Heredoc */

.highlight .si {
  color: var(--green);
} /* Literal.String.Interpol */

.highlight .sx {
  color: var(--green);
} /* Literal.String.Other */

.highlight .sr {
  color: var(--green);
} /* Literal.String.Regex */

.highlight .s1 {
  color: var(--green);
} /* Literal.String.Single */

.highlight .ss {
  color: var(--green);
} /* Literal.String.Symbol */

.highlight .bp {
  color: var(--yellow);
} /* Name.Builtin.Pseudo */

.highlight .fm {
  color: var(--cyan);
  font-weight: bold;
} /* Name.Function.Magic */

.highlight .vc {
  color: var(--red);
} /* Name.Variable.Class */

.highlight .vg {
  color: var(--red);
} /* Name.Variable.Global */

.highlight .vi {
  color: var(--red);
} /* Name.Variable.Instance */

.highlight .vm {
  color: var(--red);
} /* Name.Variable.Magic */

.highlight .il {
  color: var(--yellow);
} /* Literal.Number.Integer.Long */
